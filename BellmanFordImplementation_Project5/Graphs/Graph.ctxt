#BlueJ class context
comment0.target=Graph
comment1.params=
comment1.target=Graph()
comment2.params=data
comment2.target=int\ addNode(java.lang.Object)
comment2.text=\r\n\ @return\ The\ ID\ for\ this\ node.\r\n
comment3.params=nodeID1\ nodeID2
comment3.target=void\ addUndirectedEdge(int,\ int)
comment3.text=\r\n\ Adds\ an\ undirected\ edge,\ with\ weight\ 1,\ to\ the\ graph.\r\n
comment4.params=nodeID1\ nodeID2\ weight
comment4.target=void\ addUndirectedEdge(int,\ int,\ double)
comment4.text=\r\n\ Adds\ an\ undirected\ edge\ of\ the\ given\ weight\ to\ the\ graph.\r\n
comment5.params=fromID\ toID
comment5.target=void\ addDirectedEdge(int,\ int)
comment5.text=\r\n\ Adds\ a\ directed\ edge\ of\ weight\ 1.\r\n
comment6.params=fromID\ toID\ weight
comment6.target=void\ addDirectedEdge(int,\ int,\ double)
comment6.text=\r\n\ Adds\ a\ directed\ edge\ of\ the\ given\ weight.\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\r\n\ Returns\ a\ string\ representation\ of\ the\ graph.\r\n
comment8.params=
comment8.target=void\ printOneEdgeAtATime()
comment8.text=\r\n\ This\ is\ step\ (2)\ in\ the\ project.\r\n
comment9.params=source
comment9.target=void\ bellmanFord(int)
comment9.text=\r\n\ Performs\ the\ Bellman-Ford\ algorithm\ for\ the\ given\ source\ Node\ ID,\ printing\ out\ all\ results.\r\n\ This\ is\ step\ (3)\ in\ the\ project,\ and\ optionally\ step\ (4)\ as\ well\ if\ you\ choose\ to\ do\ it.\r\n
numComments=10
